body file control
{
      namespace => "cfdc_packages";
}

bundle agent from_list(runenv, metadata, pkgs_add, state)
{
#@include "REPO/sketch_template/standard.inc"
  classes:
    "latest_wanted" expression => strcmp("addupdate", $(state));

  methods:
    latest_wanted::
      "install" usebundle => default:package_latest($(pkgs_add));
    !latest_wanted::
      "install" usebundle => default:package_present($(pkgs_add));
}

bundle agent from_file(runenv, metadata, file, state)
{
#@include "REPO/sketch_template/standard.inc"
  vars:
      "todo" slist => readstringlist($(file), "#.*", "\n", 10000, 500000);

  classes:
      "have_todo" expression => isvariable("todo");

  methods:
    have_todo.latest_wanted::
      "install" usebundle => default:package_latest($(todo));
    have_todo.!latest_wanted::
      "install" usebundle => default:package_present($(todo));

  reports:
    !have_todo::
      "$(dcbundle): file $(file) could not be parsed to get the file list";
}

bundle agent from_url(runenv, metadata, url, state, retriever, spooldir)
{
#@include "REPO/sketch_template/standard.inc"

  vars:
      "basename" string => lastnode($(url), "/");
      "spoolfile" string => "$(spooldir)/$(basename)";

  classes:
      "have_file" expression => fileexists($(spoolfile));

  commands:
      "$(retriever) > $(spoolfile)"
      contain => default:in_shell,
      classes => default:scoped_classes_generic("retrieve", "bundle");

  methods:
    have_file::
      "install" usebundle => default:package_specific($(spoolfile), $(state), "0.0.0", "*");

  reports:
    !have_file.retrieve_reached::
      "$(dcbundle): file $(spoolfile) could not be retrieved from $(url)";
}

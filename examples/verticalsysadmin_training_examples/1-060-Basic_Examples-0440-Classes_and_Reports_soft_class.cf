bundle agent example{
      # Demonstrate normal ordering and multiple passes through a bundle
  classes:
      "file_exists"
              comment => "Create a soft class that will be used by reports: promises.",
           expression => fileexists("/tmp/newfile");

      "file_does_not_exist"
              comment => "Create a soft class that will be used by reports: promises.",
                  not => fileexists("/tmp/newfile");

  files:
      "/tmp/newfile"

               handle => "create_a_file",
              comment => "Give CFEngine something to do to change system state.",
               create => "true";
  reports:
    file_exists::
      "file /tmp/newfile exists"
               handle => "report_success",
              comment => "Report existence of /tmp/newfile";

  reports:
    file_does_not_exist::
      "file /tmp/newfile does not exist"
               handle => "report_failure",
              comment => "Report lack of existence of /tmp/newfile";
}
### demonstrate linear ordering within a single promise type
bundle agent example2 {
reports:
  "Two";

"Three";

reports:
  "One";

}

